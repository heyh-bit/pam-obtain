name: 'Hello World'
description: 'Greet someone'
inputs:
  who-to-greet:  # id of input
    description: 'Who to greet'
    required: true
    default: 'World'
  # PAM username-password obtain required parameter
  app-id:
    description: "Application Id"
    required: true
  user-name:
    description: "Account to be queried"
    required: true
  asset-name:
    description: "Asset name"
    required: true
  request-reason:
    description: "reason for enquiry"
    required: true
  connect-host:
    description: "PAM ip address"
    required: true
  credential:
    description: "credential content"
    required: true
    
outputs:
  username:
    description: "username obtain"
    value: ${{ steps.username-password.outputs.username }}
  password:
    description: "password obtain"
    value: ${{ steps.username-password.outputs.password }}
runs:
  using: "composite"
  steps:
    - id: username-password
      name: echo goodbye
      shell: bash
      env:
        APP_ID: ${{ inputs.app-id }}
        USER_NAME: ${{ inputs.user-name }}
        ASSET_NAME: ${{ inputs.asset-name}}
        REQUEST_REASON: ${{ inputs.request-reason }}
        CONNECT_HOST: ${{ inputs.connect-host }}
        CREDENTIAL: ${{ inputs.credential }}
        ENCRYPTION_PASSPHRASE: ${{ inputs.encryption_passphrase }}
      run: >
        APP_ID="'$APP_ID'";
        USER_NAME="'$USER_NAME'";
        ASSET_NAME="'$ASSET_NAME'";
        REQUEST_REASON="github action pam-obtain";
        CONNECT_HOST="$CONNECT_HOST";
        ENCRYPTION_PASSPHRASE="$ENCRYPTION_PASSPHRASE";
        echo $CREDENTIAL | tr -d '\n' >> $GITHUB_ENV;
        temp=$(echo "podman run -v $GITHUB_ENV:/workspace/cre.cred --rm registry.cn-hangzhou.aliyuncs.com/hos_test/pam-sdk:v1 $APP_ID $USER_NAME $ASSET_NAME $REQUEST_REASON $CONNECT_HOST '/workspace/cre.cred' | grep -v 'Credential filePath'");
        success=$(eval $temp);
        username=$(echo $success|tr -d '{}'|awk -F '[":,]' '{print $5}');
        password=$(echo $success|tr -d '{}'|awk -F '[":,]' '{print $11}');
        ENCRYPTED_PASSWORD=$(openssl enc -aes-256-cbc -pass pass:$ENCRYPTION_PASSPHRASE -pbkdf2 -base64 <<< "$password");
        echo username=$username >> $GITHUB_OUTPUT;
        echo password=$ENCRYPTED_PASSWORD >> $GITHUB_OUTPUT;

        
